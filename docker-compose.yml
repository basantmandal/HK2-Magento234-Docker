version: '3'

services:
    webserver:
        build:
            context: './php${PHP_VERSION}'
            dockerfile: 'Dockerfile'
            args:
                USER: ${USER}
                UID: ${UID}
        container_name: 'HK2-PHP${PHP_VERSION}'
        restart: unless-stopped
        environment:
            APACHE_DOCUMENT_ROOT: ${APACHE_DOCUMENT_ROOT-/var/www/html}
            PHP_OPCACHE_VALIDATE_TIMESTAMPS: 1
            PMA_PORT: ${HOST_MACHINE_PMA_PORT}
            MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
            COMPOSER_MEMORY_LIMIT: -1
        ports:
            - ${HOST_MACHINE_UNSECURE_HOST_PORT}:80
            - ${HOST_MACHINE_SECURE_HOST_PORT}:443
        volumes:
            - ${DOCUMENT_ROOT}:/var/www/html
            - ${PHP_INI}:/usr/local/etc/php/php.ini
            - ${VHOSTS_DIR}:/etc/apache2/sites-enabled
            - ${APACHE_LOG_DIR}:/var/log/apache2
            - ${PHP_TMP_DIR}:/usr/local/tmp
    mysql:
        build:
            context: '${MYSQL_VERSION_PATH}'
            dockerfile: 'Dockerfile'
            args:
                USER: ${USER}
                UID: ${UID}
        container_name: 'HK2-MySQL${MYSQL_VERSION}'
        # command: [
        #         mysqld,
        #         --default-authentication-plugin=mysql_native_password
        #     ]
        links:
            - webserver
        restart: unless-stopped
        environment:
            MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
            MYSQL_DATABASE: ${MYSQL_DATABASE}
            MYSQL_USER: ${MYSQL_USER}
            MYSQL_PASSWORD: ${MYSQL_PASSWORD}
            MYSQL_HOST: 'localhost'
            TZ: ${TIMEZONE}
        ports:
            - "3306:3306"
        volumes:
            - ${MYSQL_VERSION_PATH}/log:/var/log/mysql
            - ${MYSQL_VERSION_PATH}/data:/var/lib/mysql
            - ${MYSQL_VERSION_PATH}/media:/media
            - ${MYSQL_VERSION_PATH}/initdb/init.sql:/docker-entrypoint-initdb.d/init.sql
            - ${MYSQL_VERSION_PATH}/initdb/magento.sql:/docker-entrypoint-initdb.d/init2.sql
            - ${MYSQL_VERSION_PATH}/etc/mysql/conf.d:/etc/mysql/conf.d:ro
    adminer:
        image: adminer:latest
        container_name: 'HK2-Adminer'
        depends_on:
            - mysql
        restart: unless-stopped
        environment:
            ADMINER_DEFAULT_SERVER: mysql
        ports:
            - 8080:8080
        logging:
          driver: none
    redis:
        container_name: 'HK2-Redis-${REDIS_VERSION}'
        image: redis:${REDIS_VERSION}
        ports:
            - '127.0.0.1:${HOST_MACHINE_REDIS_PORT}:6379'
    elasticsearch:
        container_name: 'HK2-ElasticSearch-${ELASTIC_VERSION}'
        image: docker.elastic.co/elasticsearch/elasticsearch:${ELASTIC_VERSION}
        environment:
            - cluster.name=docker-cluster
            - bootstrap.memory_lock=true
            - 'ES_JAVA_OPTS=-Xms512m -Xmx512m'
            - discovery.type=single-node
        ulimits:
            memlock:
                soft: -1
                hard: -1
        volumes:
            - ./data/elasticsearch_${ELASTIC_VERSION}:/usr/share/elasticsearch/data
        ports:
            - 9200:9200